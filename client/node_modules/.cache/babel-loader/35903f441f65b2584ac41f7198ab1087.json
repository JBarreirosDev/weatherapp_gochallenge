{"ast":null,"code":"var _jsxFileName = \"/Users/jorgebarreiros/Desktop/gocontact-challenge/client/src/components/SearchBar/SelectedCities.js\";\nimport React from 'react';\nimport \"./SearchBar.css\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SelectedCities extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      suggestions: {},\n      selectedCities: []\n    };\n    this.updateInput = this.updateInput.bind(this);\n    this.addCity = this.addCity.bind(this);\n    this.removeCity = this.removeCity.bind(this);\n  }\n\n  updateInput(event) {\n    let val = event.target.value;\n    this.setState({\n      inputValue: val\n    });\n    setTimeout(() => {\n      this.getSuggestions();\n    }, 500);\n  }\n\n  getSuggestions() {\n    let city = this.state.inputValue;\n    fetch(`http://localhost:2000/suggestions/${city}`).then(res => res.text()).then(res => {\n      let response = JSON.parse(res);\n      this.setState({\n        suggestions: response\n      });\n    }).catch(err => {\n      this.setState({\n        suggestions: []\n      });\n    });\n  }\n\n  addCity(event) {\n    let city = event.target.innerText;\n    this.setState(prevState => ({\n      selectedCities: [...prevState.selectedCities, city],\n      inputValue: \"\",\n      suggestions: []\n    }));\n    console.warn(\"array => \", this.state.selectedCities);\n  }\n\n  removeCity(event) {\n    this.setState({\n      selectedCities: this.state.selectedCities.filter(function (city) {\n        console.warn(city, event.target.innerText);\n        console.log(city !== event.target.innerText);\n        return city !== event.target.innerText;\n      })\n    });\n    console.warn(\"array => \", this.state.selectedCities);\n  }\n\n  render() {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"citiesPoolContainer\",\n      children: props.cities.map(city => {\n        /*#__PURE__*/\n        _jsxDEV(CityContainer, {\n          city: city,\n          removeCity: props.removeCity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction CityContainer(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cityContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cityName\",\n      children: props.city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n      className: \"cross\",\n      onClick: props.removeCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, props.city, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_c = CityContainer;\nexport default SelectedCities;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityContainer\");","map":{"version":3,"sources":["/Users/jorgebarreiros/Desktop/gocontact-challenge/client/src/components/SearchBar/SelectedCities.js"],"names":["React","CloseIcon","SelectedCities","Component","constructor","props","state","inputValue","suggestions","selectedCities","updateInput","bind","addCity","removeCity","event","val","target","value","setState","setTimeout","getSuggestions","city","fetch","then","res","text","response","JSON","parse","catch","err","innerText","prevState","console","warn","filter","log","render","cities","map","CityContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;;AAEA,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,WAAW,EAAE,EAFJ;AAGTC,MAAAA,cAAc,EAAE;AAHP,KAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AACDD,EAAAA,WAAW,CAACI,KAAD,EAAO;AACd,QAAIC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAvB;AACA,SAAKC,QAAL,CAAc;AACVX,MAAAA,UAAU,EAAEQ;AADF,KAAd;AAGAI,IAAAA,UAAU,CAAC,MAAM;AACb,WAAKC,cAAL;AACH,KAFS,EAEP,GAFO,CAAV;AAGH;;AACDA,EAAAA,cAAc,GAAG;AACb,QAAIC,IAAI,GAAG,KAAKf,KAAL,CAAWC,UAAtB;AACAe,IAAAA,KAAK,CAAE,qCAAoCD,IAAK,EAA3C,CAAL,CACIE,IADJ,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEIF,IAFJ,CAEUC,GAAG,IAAI;AACT,UAAIE,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAX,CAAf;AACA,WAAKN,QAAL,CAAc;AAAEV,QAAAA,WAAW,EAAEkB;AAAf,OAAd;AACH,KALL,EAKOG,KALP,CAKaC,GAAG,IAAI;AAAE,WAAKZ,QAAL,CAAc;AAAEV,QAAAA,WAAW,EAAE;AAAf,OAAd;AAAoC,KAL1D;AAMH;;AACDI,EAAAA,OAAO,CAACE,KAAD,EAAQ;AACX,QAAIO,IAAI,GAAGP,KAAK,CAACE,MAAN,CAAae,SAAxB;AACA,SAAKb,QAAL,CAAec,SAAS,KAAK;AACzBvB,MAAAA,cAAc,EAAE,CAAC,GAAGuB,SAAS,CAACvB,cAAd,EAA8BY,IAA9B,CADS;AAEzBd,MAAAA,UAAU,EAAE,EAFa;AAGzBC,MAAAA,WAAW,EAAE;AAHY,KAAL,CAAxB;AAKAyB,IAAAA,OAAO,CAACC,IAAR,CAAa,WAAb,EAA0B,KAAK5B,KAAL,CAAWG,cAArC;AACH;;AACDI,EAAAA,UAAU,CAACC,KAAD,EAAQ;AACd,SAAKI,QAAL,CAAc;AACVT,MAAAA,cAAc,EAAE,KAAKH,KAAL,CAAWG,cAAX,CAA0B0B,MAA1B,CACZ,UAASd,IAAT,EAAe;AACXY,QAAAA,OAAO,CAACC,IAAR,CAAab,IAAb,EAAmBP,KAAK,CAACE,MAAN,CAAae,SAAhC;AACAE,QAAAA,OAAO,CAACG,GAAR,CAAYf,IAAI,KAAKP,KAAK,CAACE,MAAN,CAAae,SAAlC;AACA,eAAOV,IAAI,KAAKP,KAAK,CAACE,MAAN,CAAae,SAA7B;AACH,OALW;AADN,KAAd;AAQAE,IAAAA,OAAO,CAACC,IAAR,CAAa,WAAb,EAA0B,KAAK5B,KAAL,CAAWG,cAArC;AACH;;AACD4B,EAAAA,MAAM,GAAG;AACL;AAAA;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,gBACKhC,KAAK,CAACiC,MAAN,CAAaC,GAAb,CAAkBlB,IAAD,IAAU;AACxB;AAAA,gBAAC,aAAD;AAAe,UAAA,IAAI,EAAEA,IAArB;AAA2B,UAAA,UAAU,EAAEhB,KAAK,CAACQ;AAA7C;AAAA;AAAA;AAAA;AAAA;AACH,OAFA;AADL;AAAA;AAAA;AAAA;AAAA;AAKH;;AAxDwC;;AA0D7C,SAAS2B,aAAT,CAAuBnC,KAAvB,EAA8B;AAC1B,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBAA2BA,KAAK,CAACgB;AAAjC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,OAArB;AAA6B,MAAA,OAAO,EAAEhB,KAAK,CAACQ;AAA5C;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,KAAoCR,KAAK,CAACgB,IAA1C;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;KAPQmB,a;AAQT,eAAetC,cAAf","sourcesContent":["import React from 'react'\nimport \"./SearchBar.css\"\nimport CloseIcon from '@material-ui/icons/Close';\n\nclass SelectedCities extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            inputValue: \"\",\n            suggestions: {},\n            selectedCities: []\n        }\n        this.updateInput = this.updateInput.bind(this)\n        this.addCity = this.addCity.bind(this)\n        this.removeCity = this.removeCity.bind(this)\n    }\n    updateInput(event){\n        let val = event.target.value\n        this.setState({\n            inputValue: val\n        })\n        setTimeout(() => {\n            this.getSuggestions()\n        }, 500)\n    }  \n    getSuggestions() {\n        let city = this.state.inputValue\n        fetch(`http://localhost:2000/suggestions/${city}`).\n            then( res => res.text() ).\n            then( res => { \n                let response = JSON.parse(res)\n                this.setState({ suggestions: response })\n            }).catch(err => { this.setState({ suggestions: [] }) })\n    }\n    addCity(event) {\n        let city = event.target.innerText\n        this.setState( prevState => ({\n            selectedCities: [...prevState.selectedCities, city],\n            inputValue: \"\",\n            suggestions: []\n        }))\n        console.warn(\"array => \", this.state.selectedCities)\n    }\n    removeCity(event) {\n        this.setState({\n            selectedCities: this.state.selectedCities.filter(\n                function(city) { \n                    console.warn(city, event.target.innerText)\n                    console.log(city !== event.target.innerText)\n                    return city !== event.target.innerText \n                })\n        })\n        console.warn(\"array => \", this.state.selectedCities)\n    }\n    render() {\n        <div className=\"citiesPoolContainer\">\n            {props.cities.map((city) => {\n                <CityContainer city={city} removeCity={props.removeCity}/>\n            })}\n        </div>\n    }\n}\nfunction CityContainer(props) {\n    return (\n        <div className=\"cityContainer\" key={props.city}>\n            <div className=\"cityName\">{props.city}</div>\n            <CloseIcon className=\"cross\" onClick={props.removeCity}/>\n        </div>\n    )\n}\nexport default SelectedCities"]},"metadata":{},"sourceType":"module"}