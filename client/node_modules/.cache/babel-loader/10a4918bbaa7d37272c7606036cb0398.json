{"ast":null,"code":"var _jsxFileName = \"/Users/jorgebarreiros/Desktop/gocontact-challenge/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar/SearchBar.js';\nimport Info from './components/Info/Info.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCities: []\n    };\n    this.addCity = this.addCity.bind(this);\n    this.removeCity = this.removeCity.bind(this);\n  }\n\n  addCity(event) {\n    let city = event.target.innerText;\n    this.setState(prevState => ({\n      selectedCities: [...prevState.selectedCities, city]\n    }));\n  }\n\n  removeCity(event) {\n    this.setState({\n      selectedCities: this.state.selectedCities.splice(this.state.selectedCities.indexOf(event.target.innerText), 1)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          placeholder: \"Enter a City Name\",\n          cities: this.state.selectedCities,\n          addCity: this.addCity,\n          removeCity: this.removeCity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Info, {\n          cities: this.state.selectedCities\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jorgebarreiros/Desktop/gocontact-challenge/client/src/App.js"],"names":["React","SearchBar","Info","App","Component","constructor","props","state","selectedCities","addCity","bind","removeCity","event","city","target","innerText","setState","prevState","splice","indexOf","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE;AADL,KAAb;AAGA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDD,EAAAA,OAAO,CAACG,KAAD,EAAQ;AACb,QAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,SAAxB;AACA,SAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BT,MAAAA,cAAc,EAAE,CAAC,GAAGS,SAAS,CAACT,cAAd,EAA8BK,IAA9B;AADU,KAAL,CAAvB;AAGD;;AACDF,EAAAA,UAAU,CAACC,KAAD,EAAQ;AAChB,SAAKI,QAAL,CAAc;AACZR,MAAAA,cAAc,EAAE,KAAKD,KAAL,CAAWC,cAAX,CAA0BU,MAA1B,CAAiC,KAAKX,KAAL,CAAWC,cAAX,CAA0BW,OAA1B,CAAkCP,KAAK,CAACE,MAAN,CAAaC,SAA/C,CAAjC,EAA4F,CAA5F;AADJ,KAAd;AAGD;;AACDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,WAAW,EAAC,mBADd;AAEE,UAAA,MAAM,EAAE,KAAKb,KAAL,CAAWC,cAFrB;AAGE,UAAA,OAAO,EAAE,KAAKC,OAHhB;AAIE,UAAA,UAAU,EAAE,KAAKE;AAJnB;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,IAAD;AACE,UAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWC;AADrB;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AArC+B;;AAuClC,eAAeL,GAAf","sourcesContent":["import React from 'react'\nimport './App.css'\nimport SearchBar from './components/SearchBar/SearchBar.js'\nimport Info from './components/Info/Info.js'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      selectedCities: []\n    }\n    this.addCity = this.addCity.bind(this)\n    this.removeCity = this.removeCity.bind(this)\n  }\n  \n  addCity(event) {\n    let city = event.target.innerText\n    this.setState(prevState => ({\n      selectedCities: [...prevState.selectedCities, city]\n    }))    \n  }\n  removeCity(event) {\n    this.setState({\n      selectedCities: this.state.selectedCities.splice(this.state.selectedCities.indexOf(event.target.innerText), 1)\n    })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <SearchBar\n            placeholder=\"Enter a City Name\"\n            cities={this.state.selectedCities}\n            addCity={this.addCity}\n            removeCity={this.removeCity}\n          />\n          <Info\n            cities={this.state.selectedCities}\n          />\n        </header>\n      </div>\n    )\n  }\n}\nexport default App"]},"metadata":{},"sourceType":"module"}