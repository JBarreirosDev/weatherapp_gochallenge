{"ast":null,"code":"var _jsxFileName = \"/Users/jorgebarreiros/Desktop/gocontact-challenge/client/src/components/Info/Info.js\";\nimport React from 'react';\nimport TemperatureGraph from \"./TemperatureGraphic/TemperatureGraph.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Info extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCities: []\n    };\n  }\n\n  render() {\n    {\n      console.warn(\"num of cities ==> \", this.props.cities.length);\n    }\n\n    if (this.props.cities.length > 2) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TemperatureGraph, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this);\n    } else {\n      return null;\n    }\n  }\n\n}\n\nexport default Info;","map":{"version":3,"sources":["/Users/jorgebarreiros/Desktop/gocontact-challenge/client/src/components/Info/Info.js"],"names":["React","TemperatureGraph","Info","Component","constructor","props","state","selectedCities","render","console","warn","cities","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,0CAA7B;;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE;AADL,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACL;AAACC,MAAAA,OAAO,CAACC,IAAR,CAAa,oBAAb,EAAmC,KAAKL,KAAL,CAAWM,MAAX,CAAkBC,MAArD;AAA6D;;AAC9D,QAAG,KAAKP,KAAL,CAAWM,MAAX,CAAkBC,MAAlB,GAA2B,CAA9B,EAAiC;AAC7B,0BACI;AAAA,+BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAND,MAMO;AACH,aAAO,IAAP;AACH;AACJ;;AAnB8B;;AAqBnC,eAAeV,IAAf","sourcesContent":["import React from 'react'\nimport TemperatureGraph from \"./TemperatureGraphic/TemperatureGraph.js\"\n\nclass Info extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        selectedCities: []\n      }\n    }\n\n    render() {\n        {console.warn(\"num of cities ==> \", this.props.cities.length)}\n        if(this.props.cities.length > 2) {\n            return (\n                <div>\n                    <TemperatureGraph />\n                </div>\n            )\n        } else {\n            return null\n        }\n    }\n}\nexport default Info"]},"metadata":{},"sourceType":"module"}