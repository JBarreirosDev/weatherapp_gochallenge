{"ast":null,"code":"var _jsxFileName = \"/Users/jorgebarreiros/Desktop/gocontact-challenge/client/src/components/SearchBar.js\";\nimport React from 'react';\nimport \"./SearchBar.css\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SuggestionsList(props) {\n  if (Object.keys(props.suggestions).length == 0) {\n    console.warn(\"no suggestions\");\n    return null;\n  } else {\n    console.warn(\"!!!suggestions!!!\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dataResult\",\n      children: props.suggestions.map((value, key) => {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"dataItem\",\n          children: [value.LocalizedName, \" - \", value.Country.LocalizedName]\n        }, value.Key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_c = SuggestionsList;\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      suggestions: {}\n    };\n    this.updateInput = this.updateInput.bind(this);\n  }\n\n  updateInput(event) {\n    let val = event.target.value;\n    this.setState({\n      inputValue: val\n    });\n    setTimeout(() => {\n      this.getSuggestions();\n    }, 500);\n  }\n\n  getSuggestions() {\n    let city = this.state.inputValue;\n    fetch(`http://localhost:2000/suggestions/${city}`).then(res => res.text()).then(res => {\n      let response = JSON.parse(res);\n      this.setState({\n        suggestions: response\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchInputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: this.props.placeholder,\n          onChange: this.updateInput,\n          value: this.state.inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchIcon\",\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SuggestionsList, {\n        suggestions: this.state.suggestions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuggestionsList\");","map":{"version":3,"sources":["/Users/jorgebarreiros/Desktop/gocontact-challenge/client/src/components/SearchBar.js"],"names":["React","SearchIcon","SuggestionsList","props","Object","keys","suggestions","length","console","warn","map","value","key","LocalizedName","Country","Key","SearchBar","Component","constructor","state","inputValue","updateInput","bind","event","val","target","setState","setTimeout","getSuggestions","city","fetch","then","res","text","response","JSON","parse","render","placeholder"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,MAAGC,MAAM,CAACC,IAAP,CAAYF,KAAK,CAACG,WAAlB,EAA+BC,MAA/B,IAAyC,CAA5C,EAA+C;AAC3CC,IAAAA,OAAO,CAACC,IAAR,CAAa,gBAAb;AACA,WAAO,IAAP;AACH,GAHD,MAGO;AACHD,IAAAA,OAAO,CAACC,IAAR,CAAa,mBAAb;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACKN,KAAK,CAACG,WAAN,CAAkBI,GAAlB,CAAsB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACnC,4BACI;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA,qBACKD,KAAK,CAACE,aADX,EAEK,KAFL,EAGKF,KAAK,CAACG,OAAN,CAAcD,aAHnB;AAAA,WAA6BF,KAAK,CAACI,GAAnC;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;AACJ;;KApBQb,e;;AAsBT,MAAMc,SAAN,SAAwBhB,KAAK,CAACiB,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACf,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKgB,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETd,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIA,SAAKe,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,WAAW,CAACE,KAAD,EAAO;AACd,QAAIC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAad,KAAvB;AACA,SAAKe,QAAL,CAAc;AACVN,MAAAA,UAAU,EAAEI;AADF,KAAd;AAGAG,IAAAA,UAAU,CAAC,MAAM;AACb,WAAKC,cAAL;AACH,KAFS,EAEP,GAFO,CAAV;AAGH;;AAEDA,EAAAA,cAAc,GAAG;AACb,QAAIC,IAAI,GAAG,KAAKV,KAAL,CAAWC,UAAtB;AACAU,IAAAA,KAAK,CAAE,qCAAoCD,IAAK,EAA3C,CAAL,CACIE,IADJ,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEIF,IAFJ,CAEUC,GAAG,IAAI;AACT,UAAIE,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAX,CAAf;AACA,WAAKN,QAAL,CAAc;AAACpB,QAAAA,WAAW,EAAE4B;AAAd,OAAd;AACH,KALL;AAMH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAG,KAAKlC,KAAL,CAAWmC,WAF7B;AAGI,UAAA,QAAQ,EAAG,KAAKjB,WAHpB;AAII,UAAA,KAAK,EAAG,KAAKF,KAAL,CAAWC;AAJvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI,QAAC,eAAD;AAAiB,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWb;AAAzC;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AA/CmC;;AAiDxC,eAAeU,SAAf","sourcesContent":["import React from 'react'\nimport \"./SearchBar.css\"\nimport SearchIcon from '@material-ui/icons/Search'\n\nfunction SuggestionsList(props) {\n    if(Object.keys(props.suggestions).length == 0) {\n        console.warn(\"no suggestions\")\n        return null\n    } else {\n        console.warn(\"!!!suggestions!!!\")\n        return (\n            <div className=\"dataResult\">\n                {props.suggestions.map((value, key) => {\n                    return (\n                        <a className=\"dataItem\" key={value.Key}>\n                            {value.LocalizedName}\n                            {\" - \"}\n                            {value.Country.LocalizedName}\n                        </a>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            inputValue: \"\",\n            suggestions: {}\n        }\n        this.updateInput = this.updateInput.bind(this);\n    }\n\n    updateInput(event){\n        let val = event.target.value\n        this.setState({\n            inputValue: val\n        })\n        setTimeout(() => {\n            this.getSuggestions()\n        }, 500)\n    }\n    \n    getSuggestions() {\n        let city = this.state.inputValue\n        fetch(`http://localhost:2000/suggestions/${city}`).\n            then( res => res.text() ).\n            then( res => { \n                let response = JSON.parse(res)\n                this.setState({suggestions: response})\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"search\">\n                <div className=\"searchInputs\">\n                    <input\n                        type=\"text\"\n                        placeholder={ this.props.placeholder }                    \n                        onChange={ this.updateInput }\n                        value={ this.state.inputValue }\n                    />\n                    <div className=\"searchIcon\">\n                        <SearchIcon/>\n                    </div>\n                </div>\n                <SuggestionsList suggestions={this.state.suggestions} />\n            </div>\n        )\n    }\n}\nexport default SearchBar"]},"metadata":{},"sourceType":"module"}