{"ast":null,"code":"var _jsxFileName = \"/Users/jorgebarreiros/Desktop/gocontact-challenge/client/src/components/SearchBar/SelectedCities.js\";\nimport React from 'react';\nimport \"./SelectedCities.css\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SelectedCities extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: \"\"\n    };\n    this.removeCity = this.removeCity.bind(this);\n  }\n\n  removeCity(event) {\n    this.setState({\n      selectedCities: this.state.selectedCities.filter(function (city) {\n        console.warn(city, event.target.innerText);\n        console.log(city !== event.target.innerText);\n        return city !== event.target.innerText;\n      })\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"citiesPoolContainer\",\n      children: [console.warn(\"cities ==> \", this.props.cities), this.props.cities.map(city => {\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          className: \"cityContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cityName\",\n            children: [\" \", city, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n            className: \"cross\",\n            onClick: this.removeCity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, city, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SelectedCities;","map":{"version":3,"sources":["/Users/jorgebarreiros/Desktop/gocontact-challenge/client/src/components/SearchBar/SelectedCities.js"],"names":["React","CloseIcon","SelectedCities","Component","constructor","props","state","city","removeCity","bind","event","setState","selectedCities","filter","console","warn","target","innerText","log","render","cities","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;;AAEA,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AACDD,EAAAA,UAAU,CAACE,KAAD,EAAQ;AACd,SAAKC,QAAL,CAAc;AACVC,MAAAA,cAAc,EAAE,KAAKN,KAAL,CAAWM,cAAX,CAA0BC,MAA1B,CACZ,UAASN,IAAT,EAAe;AACXO,QAAAA,OAAO,CAACC,IAAR,CAAaR,IAAb,EAAmBG,KAAK,CAACM,MAAN,CAAaC,SAAhC;AACAH,QAAAA,OAAO,CAACI,GAAR,CAAYX,IAAI,KAAKG,KAAK,CAACM,MAAN,CAAaC,SAAlC;AACA,eAAOV,IAAI,KAAKG,KAAK,CAACM,MAAN,CAAaC,SAA7B;AACH,OALW;AADN,KAAd;AAQH;;AACDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,iBACKL,OAAO,CAACC,IAAR,CAAa,aAAb,EAA4B,KAAKV,KAAL,CAAWe,MAAvC,CADL,EAEK,KAAKf,KAAL,CAAWe,MAAX,CAAkBC,GAAlB,CAAuBd,IAAD,IAAU;AAC7B;AAAA;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,4BAA4BA,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,SAAD;AAAW,YAAA,SAAS,EAAC,OAArB;AAA6B,YAAA,OAAO,EAAE,KAAKC;AAA3C;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAAoCD,IAApC;AAAA;AAAA;AAAA;AAAA;AAIH,OALA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA9BwC;;AAgC7C,eAAeL,cAAf","sourcesContent":["import React from 'react'\nimport \"./SelectedCities.css\"\nimport CloseIcon from '@material-ui/icons/Close';\n\nclass SelectedCities extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            city: \"\" \n        }\n        this.removeCity = this.removeCity.bind(this)\n    }\n    removeCity(event) {\n        this.setState({\n            selectedCities: this.state.selectedCities.filter(\n                function(city) { \n                    console.warn(city, event.target.innerText)\n                    console.log(city !== event.target.innerText)\n                    return city !== event.target.innerText \n                })\n        })\n    }\n    render() {\n        return (\n            <div className=\"citiesPoolContainer\">\n                {console.warn(\"cities ==> \", this.props.cities)}\n                {this.props.cities.map((city) => {\n                    <div className=\"cityContainer\" key={city}>\n                        <div className=\"cityName\"> {city} </div>\n                        <CloseIcon className=\"cross\" onClick={this.removeCity}/>\n                    </div>\n                })}\n            </div>\n        )\n    }\n}\nexport default SelectedCities"]},"metadata":{},"sourceType":"module"}