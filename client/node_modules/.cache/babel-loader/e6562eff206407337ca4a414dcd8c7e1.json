{"ast":null,"code":"var _jsxFileName = \"/Users/jorgebarreiros/Desktop/gocontact-challenge/client/src/components/Info/Table/WeatherTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useTable, useSortBy } from 'react-table';\nimport { COLUMNS } from './Columns';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WeatherTable = props => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => props.data, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  }, useSortBy);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n          children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(ArrowDropUpIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 79\n            }, this) : /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 100\n            }, this) : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: [console.warn(\"rows => \", data), rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"tableCell\",\n              ...cell.getCellProps(),\n              children: [\" \", cell.render(\"Cell\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WeatherTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = WeatherTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherTable\");","map":{"version":3,"sources":["/Users/jorgebarreiros/Desktop/gocontact-challenge/client/src/components/Info/Table/WeatherTable.js"],"names":["React","useMemo","useTable","useSortBy","COLUMNS","ArrowDropUpIcon","ArrowDropDownIcon","WeatherTable","props","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","console","warn","row","getRowProps","cells","cell","getCellProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,aAApC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAMC,OAAO,GAAGR,OAAO,CAAE,MAAMG,OAAR,EAAiB,EAAjB,CAAvB;AACA,QAAMM,IAAI,GAAGT,OAAO,CAAE,MAAMO,KAAK,CAACE,IAAd,EAAoB,EAApB,CAApB;AACA,QAAMC,aAAa,GAAGT,QAAQ,CAAC;AAC3BO,IAAAA,OAD2B;AAE3BC,IAAAA;AAF2B,GAAD,EAG3BP,SAH2B,CAA9B;AAIA,QAAM;AACFS,IAAAA,aADE;AAEFC,IAAAA,iBAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,IAJE;AAKFC,IAAAA;AALE,MAMFL,aANJ;AAOA,sBACI,sBAAWC,aAAa,EAAxB;AAAA,4BACI;AAAA,gBACKE,YAAY,CAACG,GAAb,CAAkBC,WAAW,iBAC1B,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBACKD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAM,iBAC5B,mBAAQA,MAAM,CAACC,cAAP,CAAsBD,MAAM,CAACE,oBAAP,EAAtB,CAAR;AAAA,qBACMF,MAAM,CAACG,MAAP,CAAc,QAAd,CADN,eAEI;AAAA,sBACKH,MAAM,CAACI,QAAP,GAAmBJ,MAAM,CAACK,YAAP,gBAAsB,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,oBAAtB,gBAA2C,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,oBAA9D,GAAsF;AAD3F;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI,sBAAWb,iBAAiB,EAA5B;AAAA,iBACKc,OAAO,CAACC,IAAR,CAAa,UAAb,EAAyBlB,IAAzB,CADL,EAEKK,IAAI,CAACE,GAAL,CAAUY,GAAD,IAAS;AACfb,QAAAA,UAAU,CAACa,GAAD,CAAV;AACA,4BACI,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,oBACKD,GAAG,CAACE,KAAJ,CAAUd,GAAV,CAAee,IAAI,IAAI;AACpB,gCAAO;AAAI,cAAA,SAAS,EAAC,WAAd;AAAA,iBAA8BA,IAAI,CAACC,YAAL,EAA9B;AAAA,8BAAqDD,IAAI,CAACR,MAAL,CAAY,MAAZ,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,WAFA;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OATA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CA9CM;;GAAMjB,Y;UAGaL,Q;;;KAHbK,Y","sourcesContent":["import React, { useMemo } from 'react'\nimport { useTable, useSortBy } from 'react-table'\nimport { COLUMNS } from './Columns'\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\n\nexport const WeatherTable = (props) => {\n    const columns = useMemo( () => COLUMNS, [] )\n    const data = useMemo( () => props.data, [] )\n    const tableInstance = useTable({\n        columns,\n        data\n    }, useSortBy)\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow\n    } = tableInstance\n    return (\n        <table {...getTableProps()}>\n            <thead>\n                {headerGroups.map( headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()} >\n                        {headerGroup.headers.map( column => (\n                            <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                { column.render(\"Header\") }\n                                <span>\n                                    {column.isSorted ? (column.isSortedDesc ? <ArrowDropUpIcon/> : <ArrowDropDownIcon/>) : \"\"}\n                                </span>\n                            </th>\n                        ))}\n                    </tr>\n                ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {console.warn(\"rows => \", data)}\n                {rows.map((row) => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map( cell => {\n                                return <td className=\"tableCell\" {...cell.getCellProps()}> {cell.render(\"Cell\")}</td>\n                            })}\n                        </tr>\n                    )\n                })}\n            </tbody>\n          \n        </table>\n    )\n}"]},"metadata":{},"sourceType":"module"}