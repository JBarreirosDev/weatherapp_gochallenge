{"ast":null,"code":"var _jsxFileName = \"/Users/jorgebarreiros/Desktop/gocontact-challenge/client/src/components/Info/TemperatureGraphic/TemperatureGraph.js\";\nimport React from 'react';\nimport Chart from 'chart.js/auto';\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TemperatureGraph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cities: [],\n      temperature: [],\n      color: []\n    };\n  }\n\n  updateData() {\n    let citiesArray = [];\n    let tempArray = [];\n    let colorArray = [];\n    this.props.data.map(data => {\n      citiesArray.push(data.city);\n    });\n    this.setState({\n      cities: citiesArray\n    });\n  }\n\n  render() {\n    this.updateData();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"TemperatureGraph\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        width: 600,\n        height: 400,\n        data: {\n          labels: this.state.cities,\n          datasets: [{\n            label: \"Temperature per City\",\n            data: this.state.temperature,\n            backgroundColor: this.state.color\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          hover: {\n            mode: false\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TemperatureGraph;","map":{"version":3,"sources":["/Users/jorgebarreiros/Desktop/gocontact-challenge/client/src/components/Info/TemperatureGraphic/TemperatureGraph.js"],"names":["React","Chart","Bar","TemperatureGraph","Component","constructor","props","state","cities","temperature","color","updateData","citiesArray","tempArray","colorArray","data","map","push","city","setState","render","labels","datasets","label","backgroundColor","maintainAspectRatio","hover","mode"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;;;AAEA,MAAMC,gBAAN,SAA+BH,KAAK,CAACI,SAArC,CAA+C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,WAAW,EAAE,EAFJ;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AACDC,EAAAA,UAAU,GAAE;AACR,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,SAAKR,KAAL,CAAWS,IAAX,CAAgBC,GAAhB,CAAsBD,IAAD,IAAU;AAC3BH,MAAAA,WAAW,CAACK,IAAZ,CAAiBF,IAAI,CAACG,IAAtB;AACH,KAFD;AAGA,SAAKC,QAAL,CAAc;AACVX,MAAAA,MAAM,EAAEI;AADE,KAAd;AAGH;;AAEDQ,EAAAA,MAAM,GAAI;AACN,SAAKT,UAAL;AACA,wBACI;AAAK,MAAA,EAAE,EAAC,kBAAR;AAAA,6BACI,QAAC,GAAD;AACI,QAAA,KAAK,EAAE,GADX;AAEI,QAAA,MAAM,EAAE,GAFZ;AAGI,QAAA,IAAI,EAAE;AACFU,UAAAA,MAAM,EAAE,KAAKd,KAAL,CAAWC,MADjB;AAEFc,UAAAA,QAAQ,EAAE,CAAC;AACPC,YAAAA,KAAK,EAAE,sBADA;AAEPR,YAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWE,WAFV;AAGPe,YAAAA,eAAe,EAAE,KAAKjB,KAAL,CAAWG;AAHrB,WAAD;AAFR,SAHV;AAWI,QAAA,OAAO,EAAE;AACLe,UAAAA,mBAAmB,EAAE,KADhB;AAELC,UAAAA,KAAK,EAAE;AACHC,YAAAA,IAAI,EAAE;AADH;AAFF;AAXb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAsBH;;AA7C0C;;AA+C/C,eAAexB,gBAAf","sourcesContent":["import React from 'react'\nimport Chart from 'chart.js/auto'\nimport { Bar } from \"react-chartjs-2\"\n\nclass TemperatureGraph extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            cities: [],\n            temperature: [],\n            color: []\n        }\n    }\n    updateData(){\n        let citiesArray = []\n        let tempArray = []\n        let colorArray = []\n        this.props.data.map( (data) => {\n            citiesArray.push(data.city)\n        })\n        this.setState({\n            cities: citiesArray\n        })\n    }\n\n    render () {\n        this.updateData()\n        return (\n            <div id=\"TemperatureGraph\">\n                <Bar\n                    width={600}\n                    height={400}\n                    data={{\n                        labels: this.state.cities,\n                        datasets: [{\n                            label: \"Temperature per City\",\n                            data: this.state.temperature,\n                            backgroundColor: this.state.color\n                        }]\n                    }}\n                    options={{\n                        maintainAspectRatio: false,\n                        hover: {\n                            mode: false\n                        }\n                    }}\n                />\n            </div>\n        )\n    }\n}\nexport default TemperatureGraph"]},"metadata":{},"sourceType":"module"}