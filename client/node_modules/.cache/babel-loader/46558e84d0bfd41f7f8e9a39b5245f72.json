{"ast":null,"code":"var _jsxFileName = \"/Users/jorgebarreiros/Desktop/gocontact-challenge/client/src/components/SearchBar.js\";\nimport React from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SuggestionsList(props) {\n  if (props.suggestions) {\n    return this.state.suggestions.map((value, key) => {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"dataItem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 21\n      }, this);\n    });\n  } else {\n    return null;\n  }\n}\n\n_c = SuggestionsList;\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      suggestions: {}\n    };\n    this.updateInput = this.updateInput.bind(this);\n  }\n\n  updateInput(event) {\n    let val = event.target.value;\n    this.setState({\n      inputValue: val\n    });\n    setTimeout(() => {\n      this.getSuggestions();\n    }, 500);\n  }\n\n  getSuggestions() {\n    let city = this.state.inputValue;\n    console.warn(city);\n    fetch(`http://localhost:2000/suggestions/${city}`).then(res => res.text()).then(res => {\n      let response = JSON.parse(res);\n      this.setState({\n        suggestions: response\n      });\n    });\n  }\n\n  SuggestionsList() {\n    if (this.state.suggestions) {}\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchInputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: this.props.placeholder,\n          onChange: this.updateInput,\n          value: this.state.inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchIcon\",\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataResult\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuggestionsList\");","map":{"version":3,"sources":["/Users/jorgebarreiros/Desktop/gocontact-challenge/client/src/components/SearchBar.js"],"names":["React","SearchIcon","SuggestionsList","props","suggestions","state","map","value","key","SearchBar","Component","constructor","inputValue","updateInput","bind","event","val","target","setState","setTimeout","getSuggestions","city","console","warn","fetch","then","res","text","response","JSON","parse","render","placeholder"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,MAAGA,KAAK,CAACC,WAAT,EAAsB;AAClB,WACI,KAAKC,KAAL,CAAWD,WAAX,CAAuBE,GAAvB,CAA2B,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACvC,0BACI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAND,CADJ;AASH,GAVD,MAUO;AACH,WAAO,IAAP;AACH;AAGJ;;KAhBQN,e;;AAkBT,MAAMO,SAAN,SAAwBT,KAAK,CAACU,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACR,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKE,KAAL,GAAa;AACTO,MAAAA,UAAU,EAAE,EADH;AAETR,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIA,SAAKS,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,WAAW,CAACE,KAAD,EAAO;AACd,QAAIC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAaV,KAAvB;AACA,SAAKW,QAAL,CAAc;AACVN,MAAAA,UAAU,EAAEI;AADF,KAAd;AAGAG,IAAAA,UAAU,CAAC,MAAM;AACb,WAAKC,cAAL;AACH,KAFS,EAEP,GAFO,CAAV;AAGH;;AAEDA,EAAAA,cAAc,GAAG;AACb,QAAIC,IAAI,GAAG,KAAKhB,KAAL,CAAWO,UAAtB;AACAU,IAAAA,OAAO,CAACC,IAAR,CAAaF,IAAb;AACAG,IAAAA,KAAK,CAAE,qCAAoCH,IAAK,EAA3C,CAAL,CACII,IADJ,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEIF,IAFJ,CAEUC,GAAG,IAAI;AACT,UAAIE,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAX,CAAf;AACA,WAAKR,QAAL,CAAc;AAAEd,QAAAA,WAAW,EAAEwB;AAAf,OAAd;AACH,KALL;AAMH;;AAED1B,EAAAA,eAAe,GAAG;AACd,QAAG,KAAKG,KAAL,CAAWD,WAAd,EAA0B,CAEzB;AACJ;;AAED2B,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAG,KAAK5B,KAAL,CAAW6B,WAF7B;AAGI,UAAA,QAAQ,EAAG,KAAKnB,WAHpB;AAII,UAAA,KAAK,EAAG,KAAKR,KAAL,CAAWO;AAJvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AAxDmC;;AA0DxC,eAAeH,SAAf","sourcesContent":["import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\n\nfunction SuggestionsList(props) {\n    if(props.suggestions) {\n        return (\n            this.state.suggestions.map((value, key) => {\n                return (\n                    <a className=\"dataItem\">\n\n                    </a>\n                )\n            })\n        )\n    } else {\n        return null\n    }\n\n\n}\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            inputValue: \"\",\n            suggestions: {}\n        }\n        this.updateInput = this.updateInput.bind(this);\n    }\n\n    updateInput(event){\n        let val = event.target.value\n        this.setState({\n            inputValue: val\n        })\n        setTimeout(() => {\n            this.getSuggestions()\n        }, 500)\n    }\n    \n    getSuggestions() {\n        let city = this.state.inputValue\n        console.warn(city)\n        fetch(`http://localhost:2000/suggestions/${city}`).\n            then( res => res.text() ).\n            then( res => { \n                let response = JSON.parse(res)\n                this.setState({ suggestions: response }) \n            })\n    }\n\n    SuggestionsList() {\n        if(this.state.suggestions){\n            \n        }\n    }\n\n    render() {\n        return (\n            <div className=\"search\">\n                <div className=\"searchInputs\">\n                    <input\n                        type=\"text\"\n                        placeholder={ this.props.placeholder }                    \n                        onChange={ this.updateInput }\n                        value={ this.state.inputValue }\n                    />\n                    <div className=\"searchIcon\">\n                        <SearchIcon/>\n                    </div>\n                </div>\n                <div className=\"dataResult\">\n                    \n                </div>\n            </div>\n        )\n    }\n}\nexport default SearchBar"]},"metadata":{},"sourceType":"module"}